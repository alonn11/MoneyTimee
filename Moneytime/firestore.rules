rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper function to check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if user is admin
    function isAdmin) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Users collection rules
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update, delete: if isAdmin() || request.auth.uid == userId;
    }

    // Services collection rules
    match /services/{serviceId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || 
        resource.data.provider.uid == request.auth.uid;
    }

    // Service requests collection rules
    match /service-requests/{requestId} {
      allow read: if true;
      allow create: if isAuthenticated();
      allow update, delete: if isAdmin() || 
        resource.data.requester.uid == request.auth.uid;
    }
  }
}